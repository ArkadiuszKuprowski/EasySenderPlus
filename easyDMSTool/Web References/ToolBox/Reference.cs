//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.18444.
// 
#pragma warning disable 1591

namespace easyDMSTool.ToolBox {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="ToolboxPortBinding", Namespace="http://toolbox.webpdf.net/")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(options))]
    public partial class ToolboxService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback processDocumentURLOperationCompleted;
        
        private System.Threading.SendOrPostCallback processDocumentOperationCompleted;
        
        private System.Threading.SendOrPostCallback processDocumentSimpleOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public ToolboxService() {
            this.Url = global::easyDMSTool.Properties.Settings.Default.easyDMSTool_Toolbox_ToolboxService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event processDocumentURLCompletedEventHandler processDocumentURLCompleted;
        
        /// <remarks/>
        public event processDocumentCompletedEventHandler processDocumentCompleted;
        
        /// <remarks/>
        public event processDocumentSimpleCompletedEventHandler processDocumentSimpleCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://toolbox.webpdf.net/", ResponseNamespace="http://toolbox.webpdf.net/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="base64Binary", IsNullable=true)]
        public byte[] processDocumentURL([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] toolboxOptions options, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")] string fileURL) {
            object[] results = this.Invoke("processDocumentURL", new object[] {
                        options,
                        fileURL});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void processDocumentURLAsync(toolboxOptions options, string fileURL) {
            this.processDocumentURLAsync(options, fileURL, null);
        }
        
        /// <remarks/>
        public void processDocumentURLAsync(toolboxOptions options, string fileURL, object userState) {
            if ((this.processDocumentURLOperationCompleted == null)) {
                this.processDocumentURLOperationCompleted = new System.Threading.SendOrPostCallback(this.OnprocessDocumentURLOperationCompleted);
            }
            this.InvokeAsync("processDocumentURL", new object[] {
                        options,
                        fileURL}, this.processDocumentURLOperationCompleted, userState);
        }
        
        private void OnprocessDocumentURLOperationCompleted(object arg) {
            if ((this.processDocumentURLCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.processDocumentURLCompleted(this, new processDocumentURLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://toolbox.webpdf.net/", ResponseNamespace="http://toolbox.webpdf.net/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="base64Binary", IsNullable=true)]
        public byte[] processDocument([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] toolboxOptions options, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="base64Binary")] byte[] fileContent) {
            object[] results = this.Invoke("processDocument", new object[] {
                        options,
                        fileContent});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void processDocumentAsync(toolboxOptions options, byte[] fileContent) {
            this.processDocumentAsync(options, fileContent, null);
        }
        
        /// <remarks/>
        public void processDocumentAsync(toolboxOptions options, byte[] fileContent, object userState) {
            if ((this.processDocumentOperationCompleted == null)) {
                this.processDocumentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnprocessDocumentOperationCompleted);
            }
            this.InvokeAsync("processDocument", new object[] {
                        options,
                        fileContent}, this.processDocumentOperationCompleted, userState);
        }
        
        private void OnprocessDocumentOperationCompleted(object arg) {
            if ((this.processDocumentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.processDocumentCompleted(this, new processDocumentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://toolbox.webpdf.net/", ResponseNamespace="http://toolbox.webpdf.net/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="base64Binary", IsNullable=true)]
        public byte[] processDocumentSimple([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string options, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="base64Binary")] byte[] fileContent) {
            object[] results = this.Invoke("processDocumentSimple", new object[] {
                        options,
                        fileContent});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void processDocumentSimpleAsync(string options, byte[] fileContent) {
            this.processDocumentSimpleAsync(options, fileContent, null);
        }
        
        /// <remarks/>
        public void processDocumentSimpleAsync(string options, byte[] fileContent, object userState) {
            if ((this.processDocumentSimpleOperationCompleted == null)) {
                this.processDocumentSimpleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnprocessDocumentSimpleOperationCompleted);
            }
            this.InvokeAsync("processDocumentSimple", new object[] {
                        options,
                        fileContent}, this.processDocumentSimpleOperationCompleted, userState);
        }
        
        private void OnprocessDocumentSimpleOperationCompleted(object arg) {
            if ((this.processDocumentSimpleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.processDocumentSimpleCompleted(this, new processDocumentSimpleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://toolbox.webpdf.net/")]
    public partial class toolboxOptions : options {
        
        private string toolboxOptions1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("toolboxOptions", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string toolboxOptions1 {
            get {
                return this.toolboxOptions1Field;
            }
            set {
                this.toolboxOptions1Field = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(toolboxOptions))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://toolbox.webpdf.net/")]
    public abstract partial class options {
        
        private string serviceOptionsField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string serviceOptions {
            get {
                return this.serviceOptionsField;
            }
            set {
                this.serviceOptionsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void processDocumentURLCompletedEventHandler(object sender, processDocumentURLCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class processDocumentURLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal processDocumentURLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void processDocumentCompletedEventHandler(object sender, processDocumentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class processDocumentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal processDocumentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void processDocumentSimpleCompletedEventHandler(object sender, processDocumentSimpleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class processDocumentSimpleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal processDocumentSimpleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591